name: Build-Application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone the project repository
        run: |
          sudo chmod -R 777 /mnt
          git clone "https://github.com/MayankgudadheCI/project.git" /mnt/project

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install maven -y

      - name: Build with Maven
        run: |
          cd /mnt/project
          mvn clean install
          mvn package

      - name: Install docker
        run: |
          sudo apt-get install docker -y

      - name: Cloning Secret repo
        env:
          MY_TOKEN: ${{secrets.MY_TOKEN}}
        run: |
          sudo chmod -R 777 /mnt
          sudo mkdir /mnt/mayank
          sudo chmod -R 777 /mnt/mayank
          sudo mkdir /mnt/test
          git clone "https://x-access-token:${MY_TOKEN}@github.com/MayankgudadheCI/private_repo.git" /mnt/mayank

      - name: Upload WAR file
        uses: actions/upload-artifact@v3
        with:
          name: LoginWebApp
          path: /mnt/project/target/LoginWebApp.war
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Download war file
        uses: actions/download-artifact@v3
        with:
          name: LoginWebApp
      - name: Set up SSH key
        run: |
          sudo chmod -R 777 /mnt
          echo "${{ secrets.EC2_SSH__KEY }}" > /mnt/private_key.pem
          sudo chmod 600 /mnt/private_key.pem
      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to EC2
        run: |
          ssh -i /mnt/private_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOST }} << 'EOF'
            echo "Deployment script executed."
          EOF


